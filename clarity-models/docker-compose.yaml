#================================== Description ========================================
# Docker Compose file to build the clarity-models image
#
# To start the models service, you can use either of the following methods:
#   1. From the command line, navigate to `clarity-models/` and run
#        `docker compose up -d`
#   2. Use the IntelliJ Docker plugin to run this file as a Docker Compose configuration.
#
# To force a rebuild of the image, use:
#        `docker compose build --no-cache`
#=======================================================================================

services:
  models:
    image: "clarity-models-models:latest"
    container_name: "clarity-models"
    ports:
      - "6006:6006"
      - "8000:8000"
    build:
      context: ..
      dockerfile: "clarity-models/Dockerfile"
    platform: "linux/amd64"
    volumes:
      - "./.artifacts:/app/.artifacts"
      - "./models:/app/models"
      - "./utils:/app/utils"
      - "./app.py:/app/app.py"
      - "./logging.yaml:/app/logging.yaml"
      - "./models.yaml:/app/models.yaml"
      - "../data/simple/train.json:/app/data/simple/train.json"
      - "../data/simple/valid.json:/app/data/simple/valid.json"
    environment:
      - "HF_HOME=/app/cache"
      - "PYTHONUNBUFFERED=1"
      - "TOKENIZERS_PARALLELISM=false"
    restart: "unless-stopped"